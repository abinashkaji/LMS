[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "yfinance",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "yfinance",
        "description": "yfinance",
        "detail": "yfinance",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "plotly.offline",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "plotly.offline",
        "description": "plotly.offline",
        "detail": "plotly.offline",
        "documentation": {}
    },
    {
        "label": "plotly.graph_objs",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "plotly.graph_objs",
        "description": "plotly.graph_objs",
        "detail": "plotly.graph_objs",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "xgboost",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "xgboost",
        "description": "xgboost",
        "detail": "xgboost",
        "documentation": {}
    },
    {
        "label": "XGBRegressor",
        "importPath": "xgboost",
        "description": "xgboost",
        "isExtraImport": true,
        "detail": "xgboost",
        "documentation": {}
    },
    {
        "label": "train_test_split",
        "importPath": "sklearn.model_selection",
        "description": "sklearn.model_selection",
        "isExtraImport": true,
        "detail": "sklearn.model_selection",
        "documentation": {}
    },
    {
        "label": "Sequential",
        "importPath": "tensorflow.keras.models",
        "description": "tensorflow.keras.models",
        "isExtraImport": true,
        "detail": "tensorflow.keras.models",
        "documentation": {}
    },
    {
        "label": "Dense",
        "importPath": "tensorflow.keras.layers",
        "description": "tensorflow.keras.layers",
        "isExtraImport": true,
        "detail": "tensorflow.keras.layers",
        "documentation": {}
    },
    {
        "label": "LSTM",
        "importPath": "tensorflow.keras.layers",
        "description": "tensorflow.keras.layers",
        "isExtraImport": true,
        "detail": "tensorflow.keras.layers",
        "documentation": {}
    },
    {
        "label": "Bidirectional",
        "importPath": "tensorflow.keras.layers",
        "description": "tensorflow.keras.layers",
        "isExtraImport": true,
        "detail": "tensorflow.keras.layers",
        "documentation": {}
    },
    {
        "label": "MinMaxScaler",
        "importPath": "sklearn.preprocessing",
        "description": "sklearn.preprocessing",
        "isExtraImport": true,
        "detail": "sklearn.preprocessing",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "LMS.LMS.asgi",
        "description": "LMS.LMS.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "LMS.LMS.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-q1c5#8@&t($=*@bt#&8))vjt$@6z^-rjlk7t1w3%rxqllgjwzy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['127.0.0.1','34.200.232.107']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-q1c5#8@&t($=*@bt#&8))vjt$@6z^-rjlk7t1w3%rxqllgjwzy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['127.0.0.1','34.200.232.107']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['127.0.0.1','34.200.232.107']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['127.0.0.1','34.200.232.107']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'user',",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'user',\n]\nMIDDLEWARE = [",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'LMS.urls'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "ROOT_URLCONF = 'LMS.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "WSGI_APPLICATION = 'LMS.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "LMS.LMS.settings",
        "description": "LMS.LMS.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "LMS.LMS.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "LMS.LMS.urls",
        "description": "LMS.LMS.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('user/',include('user.urls')),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "LMS.LMS.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "LMS.LMS.wsgi",
        "description": "LMS.LMS.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "LMS.LMS.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "LMS.user.migrations.0001_initial",
        "description": "LMS.user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Userprofile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(default='abc', max_length=30)),",
        "detail": "LMS.user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "LMS.user.apps",
        "description": "LMS.user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'user'",
        "detail": "LMS.user.apps",
        "documentation": {}
    },
    {
        "label": "Userprofile",
        "kind": 6,
        "importPath": "LMS.user.models",
        "description": "LMS.user.models",
        "peekOfCode": "class Userprofile(models.Model):\n    name=models.CharField(max_length=30,default=\"abc\")\n    image=models.ImageField()\n    date=models.DateField(auto_now=False, auto_now_add=True)\n    def __str__(self) -> str:\n        return f'Hello {self.name} '",
        "detail": "LMS.user.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "LMS.user.urls",
        "description": "LMS.user.urls",
        "peekOfCode": "urlpatterns = [\n    path('',views.index,name='index'),\n]",
        "detail": "LMS.user.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "LMS.user.views",
        "description": "LMS.user.views",
        "peekOfCode": "def index(request):\n    # Assuming you have two sets of dates and corresponding values\n    path=os.path.join(settings.BASE_DIR,'user/tesla.csv')\n    df=pd.read_csv(path)\n    dates = df.iloc[:,0].values[:-6]\n    values=df.Close.values[:-6]\n    name=''\n    print(df.head())\n    trace1 = go.Scatter(x=dates, y=values, mode='lines',  line=dict(color='blue'), name='Close')\n    dates = df.iloc[:,0].values[-7:]",
        "detail": "LMS.user.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "LMS.user.views1",
        "description": "LMS.user.views1",
        "peekOfCode": "def index(request):\n    stocks = [\"TSLA\",\"HMC\"]  #, \"HMC\", \"F\"\n    data={}\n    for stock in stocks:\n        data[stock]=datagenerate(stock)\n        print(data[stock].iloc[:-5])\n    return render(request,'user/index.html',{'div':0,'context':'p'})\ndef datagenerate(stocks):    \n    history = yf.download(stocks, start=\"2022-01-01\", end=\"2022-12-31\")\n    # Extract the date and closing prices for each stock",
        "detail": "LMS.user.views1",
        "documentation": {}
    },
    {
        "label": "datagenerate",
        "kind": 2,
        "importPath": "LMS.user.views1",
        "description": "LMS.user.views1",
        "peekOfCode": "def datagenerate(stocks):    \n    history = yf.download(stocks, start=\"2022-01-01\", end=\"2022-12-31\")\n    # Extract the date and closing prices for each stock\n#    global df\n    df= pd.DataFrame(history)\n    # Convert the 'Date' column to datetime format\n    # df['Date'] = pd.to_datetime(df['Date'])\n    # # Set the 'Date' column as the index\n    # df.set_index('Date', inplace=True)\n    return df",
        "detail": "LMS.user.views1",
        "documentation": {}
    },
    {
        "label": "preprocessing",
        "kind": 2,
        "importPath": "LMS.user.views1",
        "description": "LMS.user.views1",
        "peekOfCode": "def preprocessing(stock_data):\n    # Create a dataframe from the stock data\n    # Select the 'Close' price as the target variable\n    target_variable = 'Close'\n    # Select the features and the target variable\n    features = ['Open', 'High', 'Low', 'Volume']\n    target = df[target_variable]\n    # Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(df[features], target, test_size=0.2, shuffle=False)\n    return X_train, X_test, y_train, y_test",
        "detail": "LMS.user.views1",
        "documentation": {}
    },
    {
        "label": "train",
        "kind": 2,
        "importPath": "LMS.user.views1",
        "description": "LMS.user.views1",
        "peekOfCode": "def train(X_train, X_test, y_train, y_test):\n    model = XGBRegressor()\n    model.fit(X_train, y_train)\n    return model\ndef predict(model):\n    next_week_dates = pd.date_range(end=df.index[-1], periods=7, freq='D')\n    predictions_df = pd.DataFrame(index=next_week_dates, columns=['Predicted Price'])\n    for date in next_week_dates:\n        prediction = model.predict(last_row)\n        predictions_df.loc[date, 'Predicted Price'] = prediction[0]",
        "detail": "LMS.user.views1",
        "documentation": {}
    },
    {
        "label": "predict",
        "kind": 2,
        "importPath": "LMS.user.views1",
        "description": "LMS.user.views1",
        "peekOfCode": "def predict(model):\n    next_week_dates = pd.date_range(end=df.index[-1], periods=7, freq='D')\n    predictions_df = pd.DataFrame(index=next_week_dates, columns=['Predicted Price'])\n    for date in next_week_dates:\n        prediction = model.predict(last_row)\n        predictions_df.loc[date, 'Predicted Price'] = prediction[0]\n        last_row = last_row.shift(-1)\n        last_row.iloc[-1] = prediction[0]\n    return predictions_df\n    # Perform stock prediction for one more week",
        "detail": "LMS.user.views1",
        "documentation": {}
    },
    {
        "label": "build_lstm_model",
        "kind": 2,
        "importPath": "LMS.user.viewsfinal",
        "description": "LMS.user.viewsfinal",
        "peekOfCode": "def build_lstm_model(num_layers, num_units,time_steps,num_features, bidirectional=False):\n    model = Sequential()\n    if bidirectional:\n        # Add a bidirectional LSTM layer\n        model.add(Bidirectional(LSTM(units=num_units, return_sequences=True), input_shape=(time_steps, num_features)))\n    else:\n        # Add the first LSTM layer\n        model.add(LSTM(units=num_units, return_sequences=True, input_shape=(time_steps, num_features)))\n    # Add additional LSTM layers\n    for _ in range(2, num_layers):",
        "detail": "LMS.user.viewsfinal",
        "documentation": {}
    },
    {
        "label": "calculate_technical_indicators",
        "kind": 2,
        "importPath": "LMS.user.viewsfinal",
        "description": "LMS.user.viewsfinal",
        "peekOfCode": "def calculate_technical_indicators(df, window_size=14):\n    # Calculate Moving Averages (MA)\n    df['MA_10'] = df['Close'].rolling(window=10).mean()\n    df['MA_30'] = df['Close'].rolling(window=30).mean()\n    # Calculate Relative Strength Index (RSI)\n    delta = df['Close'].diff()\n    up, down = delta.copy(), delta.copy()\n    up[up < 0] = 0\n    down[down > 0] = 0\n    avg_gain = up.rolling(window=window_size).mean()",
        "detail": "LMS.user.viewsfinal",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "LMS.user.viewsfinal",
        "description": "LMS.user.viewsfinal",
        "peekOfCode": "def index(request):\n    ticker = input(\"Stock name\")\n    df = yf.download(ticker)#,start=start_date) #, start='max', end=(datetime.today() - timedelta(days=1)).strftime('%Y-%m-%d')\n    df=calculate_technical_indicators(df)\n    df.dropna(axis=0,inplace=True)\n    columns = df.columns.to_list()\n    data = df[columns].values\n    # Normalize the data\n    scaler = MinMaxScaler()\n    scaled_data = scaler.fit_transform(data)",
        "detail": "LMS.user.viewsfinal",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "LMS.manage",
        "description": "LMS.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'LMS.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "LMS.manage",
        "documentation": {}
    }
]